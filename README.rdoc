= GIMDB

GTK graphical interface for the Internet Movie DataBase.

== Description

_gimdb_ is a program that can browse the {Internet Movie DataBase}[http://www.imdb.com/] of Amazon.
It is write in Ruby programming language and use the graphics library GTK[http://www.gtk.org/].
_gimdb_ download the movies info that you request and save them in a local sqlite3[http://www.sqlite.org/] database.

You can create users and save for each of them the movies to see, movies seen and favourites movies.
_gimdb_ can also work in offline mode searching movies in the local database.

{Screenshot}[http://cloud.github.com/downloads/pioz/gimdb/screenshot-GIMDB.png]

_gimdb_ may be useful if you don't know what movie see.


== imdb.rb

For your purposes, you can use the IMDB class.

  require 'rubygems'
  require 'imdb'
  require 'pp'

  # Get a IMDB object to perform queries
  searcher = IMDB.new

  # Query the database
  results = searcher.get_list()

  # Query the database with options
  results = searcher.get_list(:release_date => '2007,2010', :user_rating => '7,10')

  # Print the results
  pp results

  # Get more movies with same query
  results = searcher.next

Avaiable options are:

* title
* release_date
* user_rating
* num_votes
* genres
* sort
* start

== Requirements

* ruby
* activerecord
* sqlite3-ruby[http://github.com/jamis/sqlite3-ruby]
* nokogiri[http://github.com/tenderlove/nokogiri]
* libgtk2 <tt>(sudo apt-get install libgtk2-ruby)</tt>
* libglade2 <tt>(sudo apt-get install libglade2-ruby)</tt>

== Install

* sudo apt-get install ruby1.8-dev
* sudo apt-get install libxml2-dev
* sudo apt-get install libxslt1-dev
* sudo apt-get install libsqlite3-dev
* sudo apt-get install rubygems
* sudo gem install gimdb

Remember also to add rubygems bin path to your PATH env variable.
Edit <tt>~/.bashrc</tt> and add the follow line:

    PATH=$PATH:/var/lib/gems/1.8/bin

== Docs

http://rdoc.info/projects/Pioz/gimdb

== Support

You can use this email address for any questions or help: mailto:enrico@megiston.it.

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Enrico Pilotto. See LICENSE[http://github.com/pioz/gimdb/blob/master/LICENSE] for details.
